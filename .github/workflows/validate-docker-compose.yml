name: validate-docker-compose

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate-docker-compose:
    name: runner / docker-compose-linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dclint
        run: npm install --save-dev dclint

      # Create config file to allow "latest" and "dev" tags
      - name: Create config file
        run: |
          cat <<EOL > config.json
          {
            "rules": {
              "no-unbound-port-interfaces": 0,
              "service-image-require-explicit-tag": [
                1,
                {
                  "prohibitedTags": [
                    "edge",
                    "test",
                    "nightly",
                    "beta",
                    "canary",
                  ]
                }
              ]
            }
          }
          EOL

      - name: Run and Check for linting problems
        id: check-dclint-output
        run: |
          npx dclint . -r -c config.json | tee dclint-output.log || true
          if grep -E "âœ– [0-9]+ problems" dclint-output.log; then
            echo "::error::Linting errors detected"
            exit 1
          else
            echo "No linting problems found"
          fi